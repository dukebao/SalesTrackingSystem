openapi: 3.0.0
servers: 
  - url: 'http://localhost:8090'
info:
  description: This is retail API audit service 
  version: version1
  title: audit api 
  contact:
    email: steven.chang420@gmail.com
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
  - name : customer
    description: Operations available to public customers ( public route )
  - name : staff
    description: Operations available for internal staff ( private and require authentication)
paths:
  /health:
      get:
        summary: health check endpoint 
        operationId: app.health
        description: always returns 200
        responses:
          200:
            description: endpoint is healthy
  /audit-merch:
    get:
      summary: audit merch inventory items 
      operationId: app.getAuditMerch
      description: audit merch entry from event store 
      parameters:
        - name: index
          in: query
          description: get the merch index 
          schema:
            type: integer
            example: 1
      responses: 
        200: 
          description: "content return from get request"
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/merchItem'
        400:
          description: "invalid request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /audit-food:
    get:
      summary: audit food inventory items 
      operationId: app.getAuditFood
      description: audit food entry from event store 
      parameters:
        - name: index
          in: query
          description: get the food index 
          schema:
            type: integer
            example: 1
      responses: 
        200: 
          description: "content return from get request"
          content:
            application/json:
              schema: 
                type: object
                items:
                  $ref: '#/components/schemas/foodItem'
        400:
          description: "invalid request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    merchItem:
      type: object
      required:
        - SKU
        - merchName
        - merchPrice
        - merchQuantity
      properties:
        SKU:
          type: string
          example: SC123456
        merchName:
          type: string
          example: Iron Man Cup
        merchPrice:
          type: number
          format: number
          example: 18.99
        merchQuantity:
          type : integer
          format : integer
          example : 2
    foodItem:
      type: object
      required:
        - foodName
        - foodPrice
        - foodQuantity
        - expirationDate
      properties:
        foodName:
          type: string
          example: Hulk Juice
        foodPrice:
          type: number
          example: 4.50
        foodQuantity:
          type: integer
          example: 1
        expirationDate:
          type : string
          format : date-time
          example: '2022-02-45T09:12:33.001Z'
    # merchStats:
    #   required:
    #     - num_merch_item
    #     - individual_merch_price
    #     - name_of_merch
    #   properties:
    #     num_merch_item:
    #       type: integer
    #       example: 5
    #     individual_merch_price:
    #       type: number
    #       example: 20.44
    #     name_of_merch:
    #       type: string
    #       example: Iron Man Cups
    #   type: object
    # foodStats:
    #   required:
    #     - num_food_item
    #     - individual_food_price
    #     - name_of_food
    #   properties:
    #     num_food_item:
    #       type: integer
    #       example: 5
    #     individual_food_price:
    #       type: number
    #       example: 32.45
    #     name_of_food:
    #       type: string
    #       example: Hulk Juice
    #   type: object